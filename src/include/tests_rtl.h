#pragma once

void test_RtlAnsiStringToUnicodeString(int, const char*);
void test_RtlAppendStringToString(int, const char*);
void test_RtlAppendUnicodeStringToString(int, const char*);
void test_RtlAppendUnicodeToString(int, const char*);
void test_RtlAssert(int, const char*);
void test_RtlCaptureContext(int, const char*);
void test_RtlCaptureStackBackTrace(int, const char*);
void test_RtlCharToInteger(int, const char*);
void test_RtlCompareMemory(int, const char*);
void test_RtlCompareMemoryUlong(int, const char*);
void test_RtlCompareString(int, const char*);
void test_RtlCompareUnicodeString(int, const char*);
void test_RtlCopyString(int, const char*);
void test_RtlCopyUnicodeString(int, const char*);
void test_RtlCreateUnicodeString(int, const char*);
void test_RtlDowncaseUnicodeChar(int, const char*);
void test_RtlDowncaseUnicodeString(int, const char*);
void test_RtlEnterCriticalSection(int, const char*);
void test_RtlEnterCriticalSectionAndRegion(int, const char*);
void test_RtlEqualString(int, const char*);
void test_RtlEqualUnicodeString(int, const char*);
void test_RtlExtendedIntegerMultiply(int, const char*);
void test_RtlExtendedLargeIntegerDivide(int, const char*);
void test_RtlExtendedMagicDivide(int, const char*);
void test_RtlFillMemory(int, const char*);
void test_RtlFillMemoryUlong(int, const char*);
void test_RtlFreeAnsiString(int, const char*);
void test_RtlFreeUnicodeString(int, const char*);
void test_RtlGetCallersAddress(int, const char*);
void test_RtlInitAnsiString(int, const char*);
void test_RtlInitUnicodeString(int, const char*);
void test_RtlInitializeCriticalSection(int, const char*);
void test_RtlIntegerToChar(int, const char*);
void test_RtlIntegerToUnicodeString(int, const char*);
void test_RtlLeaveCriticalSection(int, const char*);
void test_RtlLeaveCriticalSectionAndRegion(int, const char*);
void test_RtlLowerChar(int, const char*);
void test_RtlMapGenericMask(int, const char*);
void test_RtlMoveMemory(int, const char*);
void test_RtlMultiByteToUnicodeN(int, const char*);
void test_RtlMultiByteToUnicodeSize(int, const char*);
void test_RtlNtStatusToDosError(int, const char*);
void test_RtlRaiseException(int, const char*);
void test_RtlRaiseStatus(int, const char*);
void test_RtlTimeFieldsToTime(int, const char*);
void test_RtlTimeToTimeFields(int, const char*);
void test_RtlTryEnterCriticalSection(int, const char*);
void test_RtlUlongByteSwap(int, const char*);
void test_RtlUnicodeStringToAnsiString(int, const char*);
void test_RtlUnicodeStringToInteger(int, const char*);
void test_RtlUnicodeToMultiByteN(int, const char*);
void test_RtlUnicodeToMultiByteSize(int, const char*);
void test_RtlUnwind(int, const char*);
void test_RtlUpcaseUnicodeChar(int, const char*);
void test_RtlUpcaseUnicodeString(int, const char*);
void test_RtlUpcaseUnicodeToMultiByteN(int, const char*);
void test_RtlUpperChar(int, const char*);
void test_RtlUpperString(int, const char*);
void test_RtlUshortByteSwap(int, const char*);
void test_RtlWalkFrameChain(int, const char*);
void test_RtlZeroMemory(int, const char*);
void test_RtlRip(int, const char*);
